# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      #- image: gcr.io/google-appengine/openjdk:8
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      PROJECT_NAME: xxxtestxxx12345

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv -f /tmp/docker/* /usr/bin
            #sudo dockerd

      # run tests!
      # - run: mvn integration-test
      # run build
      - run: 
         name: Build docker and save
         command: |
           #sudo docker ps
           #sudo /opt/apache-maven-3.5.3/bin/mvn -e -DskipTests install dockerfile:build
           mvn -DskipTests=true package
           cp target/spring-petclinic-1.5.1.jar ./spring-petclinic.jar
           docker build --file=Dockerfile -t us.gcr.io/${PROJECT_NAME}/spring-petclinic .
           mkdir -p docker-cache
           docker save -o docker-cache/build-image.tar us.gcr.io/${PROJECT_NAME}/spring-petclinic

      - save_cache:
          key: docker_cache_key-{{ checksum "docker-cache/build-image.tar" }}
          paths:
            - docker-cache

  deploy-job:
    working_directory: /app
    environment:
      PROJECT_NAME: xxxtestxxx12345
      CLUSTER_NAME: cluster-1
      CLOUDSDK_COMPUTE_ZONE: us-central1-a

    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - restore_cache:
          keys:
          - docker_cache_key-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - docker_cache_key-

      - run:
          name: Check jdk version
          command: |
            env
      - run:
          name: Store Service Account
          command: |
            echo `env | grep JAVA_HOME`
            echo $SERVICE_KEY | base64 -d -i > ${HOME}/account-auth.json
            gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
            gcloud config set project $PROJECT_NAME
            gcloud --quiet config set container/cluster $CLUSTER_NAME
            # Reading the zone from the env var is not working so we set it here
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials $CLUSTER_NAME
            #./mvnw -e install dockerfile:build
            # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
            #command: docker tag us.gcr.io/${PROJECT_NAME}/spring-petclinic:$CIRCLE_SHA1 us.gcr.io/${PROJECT_NAME}/hello:latest
            #./deploy.sh

      - run:
        name: Deploy docker to GKP
        command: |
          docker load < docker-cache/build-image.tar
          ./deploy.sh


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-job:
          requires:
            - build

